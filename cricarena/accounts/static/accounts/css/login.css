@import url('https://fonts.googleapis.com/css2?family=Nunito+Sans:ital,opsz,wght@0,6..12,200..1000;1,6..12,200..1000&family=Rajdhani:wght@300;400;500;600;700&family=Roboto:ital,wght@0,100..900;1,100..900&family=Urbanist:ital,wght@0,100..900;1,100..900&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Inter:ital,opsz,wght@0,14..32,100..900;1,14..32,100..900&family=Nunito+Sans:ital,opsz,wght@0,6..12,200..1000;1,6..12,200..1000&family=Rajdhani:wght@300;400;500;600;700&family=Roboto:ital,wght@0,100..900;1,100..900&family=Urbanist:ital,wght@0,100..900;1,100..900&display=swap');


:root {
  --bg-color: #141414;
  --container-bg: #1a1a1a;
  --border-color: #2a2a2a;
  --primary-color: #19e86c;
  --primary-hover: #53f19d;
  --text-color: #e0e0e0;
  --text-secondary: #cfcfcf;
  --error-bg: rgba(255, 0, 0, 0.08);
  --error-color: #ff4d4d;
  --card-bg: rgba(24, 24, 28, 0.98);
  --card-hover: rgba(34, 35, 38, 0.99);
  --shadow: 0 4px 30px rgba(0, 0, 0, 0.5);
}

* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

body {
  background-color: var(--bg-color);
  color: var(--text-color);
  font-family: 'Urbanist','Inter', sans-serif;
  min-height: 100vh;
  margin: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  line-height: 1.5;
  -webkit-font-smoothing: antialiased;
  padding: 20px;
}

.container {
  background-color: var(--container-bg);
  border-radius: 16px;
  padding: 2.5rem;
  width: 100%;
  max-width: 420px;
  box-shadow: var(--shadow);
  border: 1px solid var(--border-color);
  transition: transform 0.3s ease, box-shadow 0.3s ease;
  position: relative;
}

.container:hover {
  transform: translateY(-2px);
  box-shadow: 0 6px 35px rgba(0, 0, 0, 0.6);
}

.back-home {
  position: absolute;
  top: 1.5rem;
  left: 1.5rem;
  display: flex;
  align-items: center;
  color: var(--primary-color);
  font-size: 0.9rem;
  font-weight: 500;
  text-decoration: none;
  transition: all 0.2s ease;
  z-index: 1;
}

.back-home:hover {
  color: var(--primary-hover);
  transform: translateX(-2px);
}

.back-home svg {
  transition: transform 0.2s ease;
}

.back-home:hover svg {
  transform: translateX(-3px);
}

.header-group {
  text-align: center;
  margin-top: 1.5rem;
}

h2 {
  display: flex;
  align-items: center;
  justify-content: center;
  color: var(--primary-color);
  font-size: clamp(1.8rem, 2vw, 2.2rem);
  font-weight: 700;
  margin-bottom: 0.25rem;
  letter-spacing: -0.5px;
}

h2 img {
  height: 1.4em; 
  width: auto; 
  vertical-align: middle; 
  transform: translateY(-1px); 
  filter: drop-shadow(0 2px 4px rgba(0, 0, 0, 0.2)); 
}

h2:hover img {
  transform: translateY(-1px) scale(1.05); 
  transition: transform 0.2s ease;
}

.subheading {
  color: var(--text-secondary);
  font-size: 0.95rem;
  font-weight: 400;
  opacity: 0.9;
}

/* Rest of your existing CSS remains the same */
.form {
  display: none;
  flex-direction: column;
  gap: 0.75rem;
}

.form.active {
  display: flex;
  animation: fadeIn 0.4s ease-out;
}

@keyframes fadeIn {
  from { opacity: 0; transform: translateY(10px); }
  to { opacity: 1; transform: translateY(0); }
}

.input-group {
  display: flex;
  flex-direction: column;
  gap: 0.25rem;
}

input[type="text"],
input[type="password"],
input[type="email"] {
  background-color: #121212;
  border: 1px solid var(--border-color);
  border-radius: 8px;
  padding: 0.875rem 1rem;
  color: var(--text-color);
  font-size: 1rem;
  transition: all 0.2s ease;
  width: 100%;
}

input::placeholder {
  color: #555;
  opacity: 1;
}

input:focus {
  border-color: var(--primary-color);
  outline: none;
  box-shadow: 0 0 0 3px rgba(25, 232, 108, 0.15);
}

button[type="submit"] {
  width: 100%;
  padding: 0.875rem;
  background-color: var(--primary-color);
  border: none;
  border-radius: 8px;
  color: var(--bg-color);
  font-size: 1.05rem;
  font-weight: 700;
  cursor: pointer;
  transition: all 0.2s ease;
  margin-top: 1rem;
  position: relative;
  overflow: hidden;
}

button[type="submit"]::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(rgba(255, 255, 255, 0.1), rgba(255, 255, 255, 0));
  opacity: 0;
  transition: opacity 0.2s ease;
}

button[type="submit"]:hover::after,
button[type="submit"]:focus::after {
  opacity: 1;
}

button[type="submit"]:hover,
button[type="submit"]:focus {
  background: #1c1c20;
  color: #1ed760;
  transform: scale(1.035)
}

button[type="submit"]:active {
  transform: translateY(-2px);
  box-shadow: 0 2px 6px rgba(25, 232, 108, 0.25);
}

.toggle-text {
  text-align: center;
  font-size: 0.95rem;
  margin-top: 1rem;
  color: #aaa;
}

.toggle {
  color: var(--primary-color);
  font-weight: 600;
  cursor: pointer;
  text-decoration: none;
  transition: color 0.2s ease;
}

.toggle:hover {
  color: var(--primary-hover);
  text-decoration: underline;
}

.error-messages {
  background: var(--error-bg);
  color: var(--error-color);
  border-left: 4px solid var(--error-color);
  padding: 0.75rem 1rem;
  border-radius: 8px;
  margin-bottom: 1rem;
  font-size: 0.95rem;
  font-weight: 600;
  animation: shake 0.5s ease;
}

@keyframes shake {
  0%, 100% { transform: translateX(0); }
  20%, 60% { transform: translateX(-4px); }
  40%, 80% { transform: translateX(4px); }
}

label {
  display: block;
  margin-bottom: 0.5rem;
  margin-top: 0.75rem;
  color: var(--text-secondary);
  font-size: 0.95rem;
  font-weight: 600;
}

/* Card-style radio buttons */
.card-radio-group {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
  gap: 0.75rem;
  margin: 0.75rem 0 1.25rem;
}

.card-radio-label {
  display: flex;
  align-items: center;
  justify-content: center;
  background: var(--card-bg);
  border: 2px solid var(--border-color);
  border-radius: 12px;
  padding: 0.75rem 1rem;
  cursor: pointer;
  transition: all 0.2s ease;
  font-size: 1rem;
  position: relative;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  text-align: center;
  min-height: 60px;
}

.card-radio-label input[type="radio"] {
  opacity: 0;
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  margin: 0;
  cursor: pointer;
  z-index: 2;
}

.card-radio-label span {
  color: var(--text-color);
  z-index: 1;
  font-weight: 600;
}

.card-radio-label input[type="radio"]:checked {
  border-color: var(--primary-color);
}

.card-radio-label input[type="radio"]:checked + span,
.card-radio-label input[type="radio"]:checked ~ span {
  color: var(--primary-color);
  font-weight: 700;
}

.card-radio-label:hover {
  border-color: var(--primary-color);
  background: var(--card-hover);
  box-shadow: 0 4px 12px rgba(25, 232, 108, 0.15);
}

.card-radio-label input[type="radio"]:checked ~ .card-radio-label {
  border-color: var(--primary-color);
  background: var(--card-hover);
  box-shadow: 0 0 0 2px var(--primary-color);
}

.welcome-toast {
  position: fixed;
  top: -100px;
  left: 50%;
  transform: translateX(-50%);
  background-color: var(--primary-color);
  color: var(--bg-color);
  font-weight: 600;
  padding: 0.75rem 1.5rem;
  border-radius: 8px;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.25);
  opacity: 0;
  transition: all 0.4s cubic-bezier(0.68, -0.55, 0.265, 1.55);
  z-index: 9999;
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.welcome-toast.show {
  top: 20px;
  opacity: 1;
}

/* Responsive adjustments */
@media (max-width: 768px) {
  .container {
    padding: 2rem 1.5rem;
  }
  
  .card-radio-group {
    grid-template-columns: 1fr 1fr;
  }
   h2 {
    gap: 8px;
  }
  
  h2 img {
    height: 1.3em;
  }
}

@media (max-width: 480px) {
  body {
    padding: 12px;
  }
  
  .container {
    padding: 1.75rem 1.25rem;
    border-radius: 12px;
  }
  
h2 {
    gap: 6px;
    font-size: 1.6rem;
  }
  
  h2 img {
    height: 1.2em;
  }  
  .subheading {
    font-size: 0.85rem;
  }
  
  .card-radio-group {
    grid-template-columns: 1fr;
  }
  
  button[type="submit"] {
    padding: 0.75rem;
    font-size: 1rem;
  }
  
  .back-home {
    top: 1rem;
    left: 1rem;
    font-size: 0.8rem;
  }
}

/* Accessibility focus styles */
:focus-visible {
  outline: 2px solid var(--primary-color);
  outline-offset: 2px;
}

/* Loading state */
button[type="submit"].loading {
  position: relative;
  color: transparent;
  pointer-events: none;
}

button[type="submit"].loading::before {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 20px;
  height: 20px;
  border: 3px solid rgba(255, 255, 255, 0.3);
  border-top-color: var(--bg-color);
  border-radius: 50%;
  animation: spin 0.8s linear infinite;
}

@keyframes spin {
  to { transform: translate(-50%, -50%) rotate(360deg); }
}